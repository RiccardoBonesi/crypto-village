namespace org.digitalpayment

asset Account identified by accountId {
  o String accountId
  --> Customer owner
  o Double balance
}

participant Customer identified by customerId {
  o String customerId
  o String firstname
  o String lastname
  --> Account[] family optional
}

participant StoreOwner identified by ownerId {
  o String ownerId
  o String ownerName
}

abstract asset Store identified by storeId {
  o String storeId
  o String StoreName
  --> StoreOwner storeOwner
}

asset Shop identified by shopId extends Store {
  o String shopId
}

transaction AccountTransfer {
--> Account from
--> Account to
o Double amount
}

transaction TopUpAccount {
  --> Account to
  o Double amount
}

transaction Payment {
  --> Account from
  --> Store store
  o Double amount
}

event PaymentNotification {
    --> Account account
}

asset LotteryTicket identified by ticketId {
  o String ticketId
  o Double price
  --> Lottery lottery
  --> Customer ticketOwner
}

asset Lottery identified by lotteryId {
  o String lotteryId
  // o DateTime date 
  o LotteryTicket[] tickets
  o Integer num_tickets
  o Integer participants default = 0
  o Integer ticketsPerUser default = 1
  o Double price
  o Double amount
  o Integer num_winners default = 1 
  o LotteryTicket[] winners
  o Integer maxParticipants
  o String status  default = "OPEN"
}

transaction BuyLotteryTicket {
  --> LotteryTicket ticketDetails
  --> Lottery lottery
  --> Account ticketOwner
}

transaction DrawLottery {  
  --> Lottery lottery  
}

asset Trip identified by tripId {
  o String tripId
  o String tripName
  o DateTime date default="2019-05-20"
  o Customer[] participants
  o Integer maxParticipants
  o Integer currentParticipants
  o String status  default = "OPEN"
}

transaction BookTrip {
  --> Trip trip
  --> Customer booker
}

transaction DeleteTripReservation {
  --> Trip trip
  --> Customer customer
}

asset BeachUmbrella identified by beachUmbrellaId{
  o String beachUmbrellaId  
  --> Beach beach 
  o BeachUmbrellaReservation[] reservations
}

asset BeachUmbrellaReservation identified by reservationId {
  o String reservationId
  --> Beach beach
  --> BeachUmbrella beachUmbrella
  --> Customer customer
  o DateTime startDate
  o DateTime endDate
  o Integer days
}

asset Beach identified by beachId {
  o String beachId
  --> BeachUmbrella[] beachUmbrellas
}

transaction BookBeachUmbrella {
  --> Beach beach
  --> BeachUmbrella beachUmbrella
  --> BeachUmbrellaReservation reservationDetails
  --> Customer customer
  o DateTime startDate default="2019-05-20"
  o DateTime endDate default="2019-05-30"
}


transaction DeleteUmbrellaReservation {  
  --> BeachUmbrella beachUmbrella
  --> Customer customer
  o DateTime startDate
  o DateTime endDate
}


asset Restaurant identified by restaurantId extends Store {
  o String restaurantId
  o Integer totalSeats  
  o DailyReservations[] dailyReservations  
  // fare query che ritorna prenotazioni di oggi
}

asset RestaurantReservation identified by reservationId {
  o String reservationId
  --> Restaurant restaurant
  --> Customer customer
  o DateTime date
  o Integer seats  
  // check lunch/dinner qui o con un controllo orari
}

asset DailyReservations identified by dailyId {  
  o String dailyId
  o DateTime date
  --> Restaurant restaurant  
  o Integer availableSeats
  o RestaurantReservation[] reservations
}


transaction BookRestaurant {
  --> Restaurant restaurant
  --> RestaurantReservation reservationDetails
  --> Customer customer
  o Integer seats
  o DateTime date 
}

transaction DeleteRestaurantReservation {
  --> Customer customer
  --> Restaurant restaurant
  o DateTime date  
}
